
	List<String> crawl_main_page_info(String url) throws IOException {
		///////////////////getting the title///////////////////
		Document page_soup = Jsoup.connect(url).get();
		String title = page_soup.title(); title = title.split("-")[1]; title = title.split(",")[0]; String[] title_split = title.split(" "); title = title_split[title_split.length-1];
		String city = title;
		title = title + " hotels";
		if(url.contains("&pn=")) {
			char page_num = url.charAt(url.length()-1);
			System.out.printf("visiting page %c of %s\n",page_num,title);
		}else {
			System.out.println("visiting main page");
		}
		/////////////////////////////////////////////////////////////////
		////////////////////init lists for info storing//////////////////
		List<String> hotels_names = new ArrayList<String>(); List<String> hotels_prices = new ArrayList<String>(); 
		List<String>hotels_ratings = new ArrayList<String>(); List<String> hotels_reviews = new ArrayList<String>();
		List<String>hotels_links = new ArrayList<String>();
		/////////////////////////////////////////////////////////////////
		//////////////////crawling general hotel info////////////////////
		Elements hotels_containers = page_soup.select("section.hotel-wrap");
		for( Element hotel_container : hotels_containers) {
			Elements hotel_name_ele = hotel_container.select("h3.p-name > a.property-name-link");
			String hotel_name = hotel_name_ele.text(); //name string
			Elements hotel_price_ele = hotel_container.select("div.price");
			String hotel_price = hotel_price_ele.text(); //price string
			if(hotel_price.length()==0) hotel_price = "sold out/not available";
			else {
				//System.out.println(hotel_price);
				String[] temp = hotel_price.split(" ");
				hotel_price = temp[temp.length-2];
				if(hotel_price.contains("at$")) hotel_price = hotel_price.substring(3, hotel_price.length());
				else hotel_price = hotel_price.substring(1);
				//System.out.println(hotel_price);
			}
			Elements hotel_rating_ele = hotel_container.select("strong.guest-reviews-badge");
			String hotel_rating = hotel_rating_ele.text(); String[] hotel_rating_split = hotel_rating.split(" ");
			hotel_rating = hotel_rating_split[hotel_rating_split.length-1];
			Elements hotel_reviews_ele = hotel_container.select("span.ta-total-reviews");
			String hotel_reviews = hotel_reviews_ele.text(); hotel_reviews = hotel_reviews.split(" ")[0];//reviews string
			if(hotel_reviews.length()==0) hotel_reviews = "0";
			Elements hotel_href_ele = hotel_container.select("h3.p-name > a[href]");
			String hotel_href = hotel_href_ele.attr("href");
			String hotel_link = "https://hotels.com" + hotel_href; //link string
			//System.out.println(hotel_name + ": " + hotel_price + "  rating: "+ hotel_rating + "  " + hotel_reviews);
			//System.out.println(hotel_link);
			hotels_names.add(hotel_name); hotels_prices.add(hotel_price); hotels_ratings.add(hotel_rating); hotels_reviews.add(hotel_reviews); hotels_links.add(hotel_link);
		}
		/////////////////////////////////////////////////////////////////
		////////////////////check for size mismatch/////////////////////
		if (!(hotels_names.size()==hotels_prices.size() && hotels_prices.size()==hotels_ratings.size() && hotels_ratings.size()==hotels_reviews.size() && hotels_reviews.size()==hotels_links.size())) {
			System.out.println("hotel information mismatch due to crawling discrepancy");
			return null;
		}
		/////////////////////////////////////////////////////////////////
		///////////////concat all categories into one list///////////////
		List<String> hotels = new ArrayList<String>();
		hotels.add(title); hotels.addAll(hotels_names); hotels.addAll(hotels_prices); hotels.addAll(hotels_ratings); hotels.addAll(hotels_reviews); hotels.addAll(hotels_links);
		//General.displayList(hotels);
		//System.out.printf("%d hotels in %s crawled\n",hotels_names.size(), city);
		Excel.output_hotels_to_excel(hotels);
		return hotels;
	}